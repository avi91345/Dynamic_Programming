class Solution {
    public boolean canPartition(int[] nums) {
        int sum=0;
        for(int i=0;i<nums.length;i++){
            sum+=nums[i];
        }
        if(sum%2!=0){
            return false;
        }
        
            int k=sum/2;
            return subsetsum(nums,k);

        
    }
    public boolean subsetsum(int[] arr,int s){
        boolean[][] dp=new boolean[arr.length+1][s+1];
        for(int i=0;i<arr.length+1;i++){
            dp[i][0]=true;
        }
        for(int i=1;i<s+1;i++){
            dp[0][i]=false;
        }
        for(int i=1;i<arr.length+1;i++){
            for(int j=1;j<s+1;j++){
                if(arr[i-1]<=j){
                    dp[i][j]=dp[i-1][j-arr[i-1]]||dp[i-1][j];
                }
                else{
                    dp[i][j]=dp[i-1][j];
                }
            }
        }
        return dp[arr.length][s];
    }
}
